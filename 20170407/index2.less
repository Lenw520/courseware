.div(){
  width: 100px;
  height: 100px;
}
.div span{
  color:red;
}
.box{
  //.div;
  //&:extend(.div );/*精确匹配*/
  //&:extend(.div all);/*extend 好处减少生成的代码量 all 继承人家的所有的结构*/
   span{&:extend(.div span);}
}

.bucket {
  tr & { // nested ruleset with target selector
    color: blue;
  }
}

.some-class:extend(tr .bucket) {}

.box2{
  //.div;
  .div() !important;/*如果有样式冲突的话，强制采用.div的*/
}
//设置参数 还可以给参数设置默认的
.border-radius(@val:12px){
   border-radius: @val;
}
.box3{
  .border-radius(14px);
}

//设置一套样式 参数不同  如果我调用的使用传一个参数的话mixin(@color)
.mixin(@color) {
  color-1: @color;
}
.mixin(@color; @padding: 2) {
  color-2: @color;
  padding-2: @padding;
}
.mixin(@color; @padding; @margin) {
  color-3: @color;
  padding-3: @padding;
  margin: @margin @margin @margin @margin;
}
.some .selector div {
  .mixin(#008000);
  .mixin(#008000,2px ,2px);

}